type Period {
  start: String!
  end: String!
}

type ExamPeriod {
  date: Date!
  period: Period!
}

type Capacity {
  current: Int!
  max: Int!
}

type Class {
  type: ClassType!
  dayOfWeek: DayOfWeek
  period: Period
  building: String
  room: String
  teachers: [String!]!
}

type Section {
  sectionNo: String!
  closed: Boolean!
  capacity: Capacity!
  note: String
  classes: [Class!]!
}

type Course {
  # General info
  studyProgram: StudyProgram!
  semester: String!
  academicYear: String!

  # Course info
  courseNo: String!
  abbrName: String!
  courseNameTh: String!
  courseNameEn: String!
  faculty: String!
  credit: Float!
  creditHours: String!
  courseCondition: String!
  genEdType: GenEdType!

  # Exam
  midterm: ExamPeriod
  final: ExamPeriod

  # Section
  sections: [Section!]!
}

input FilterInput {
  keyword: String
  genEdTypes: [GenEdType!]
  dayOfWeeks: [DayOfWeek!]
  limit: Int
  offset: Int
}

input CourseGroupInput {
  semester: String!
  academicYear: String!
  studyProgram: StudyProgram!
}

type Query {
  courses: [Course!]!
  course(courseNo: String!, courseGroup: CourseGroupInput!): Course!
  search(filter: FilterInput!, courseGroup: CourseGroupInput!): [Course!]!
}
